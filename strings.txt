// Text strings used in Project 4. 
// Output is produced only in a .cpp file - no header files may contain output statements.
// A gap between two output operators marks where a variable or function would appear.
// A '+' marks where another string would appear in concatenation.

// Model produces no output
// strings used in Error objects thrown by Model
"Structure not found!"
"Agent not found!"


// Controller output
cout << "\nTime " <<  << ": Enter command: ";
cout << "Done" << endl;
cout << "Unknown exception caught!" << endl;

// strings used in Error objects thrown by Controller
"Agent is dead!"	// not expected to be visible in this project
"View of that name already open!"
"No object of that name!"
"No view of that name is open!"
"No map view is open!"


// strings used in Error objects thrown by Controller
"Unrecognized command!"
"Invalid name for new object!"
"Agent is not alive!"
"Expected an integer!"
"Expected a double!"

// The factory functions produce no output.
// strings used in Error objects thrown by Agent_factory:
"Trying to create agent of unknown type!"
// strings used in Error objects thrown by Structure_factory:
"Trying to create structure of unknown type!"

// Sim_object output
cout << "Sim_object " <<  << " constructed" << endl;
cout << "Sim_object " <<  << " destructed" << endl;

// Structure output
cout << "Structure " <<  << " constructed" << endl;
cout << "Structure " <<  << " destructed" << endl;
// Structure::describe output
cout <<  << " at " <<  << endl;

// Farm output
cout << "Farm " <<  << " constructed" << endl;
cout << "Farm " <<  << " destructed" << endl;
// Farm::update output
cout << "Farm " <<  << " now has " << << endl;
// Farm::describe output
cout << "Farm ";
cout << "   Food available: " <<  << endl;


// Town_Hall output
cout << "Town_Hall " <<  << " constructed" << endl;
cout << "Town_Hall " <<  << " destructed" << endl;
// Town_Hall::describe output
cout << "Town_Hall ";
cout << "   Contains " <<  << endl;

// Agent output 
cout << "Agent " <<  << " constructed" << endl;
cout << "Agent " <<  << " destructed" << endl;
// Agent::update output
cout <<  << ": I'm there!"<< endl;
cout <<  << ": step..." << endl;
// Agent::move_to output
cout <<  << ": I'm on the way" << endl;
cout <<  << ": I'm already there" << endl;
// Agent::stop output
cout <<  << ": I'm stopped" << endl;
// Agent::lose_health output
cout <<  << ": Arrggh!" << endl;
cout <<  << ": Ouch!" << endl;
// Agent::describe output
cout <<  << " at " <<  << endl;
cout << "   Health is " <<  << endl;
cout << "   Moving at speed " <<  << " to " <<  << endl;
cout << "   Stopped" << endl;
cout << "   Is dying" << endl; // no longer used - should be deleted
cout << "   Is dead" << endl; // not expected to be visible in this project
cout << "   Is disappearing" << endl; // no longer used - should be deleted

// strings used in Error objects thrown by Agent
 + ": Sorry, I can't work!"
 + ": Sorry, I can't attack!"


// Peasant output
cout << "Peasant " <<  << " constructed" << endl;
cout << "Peasant " <<  << " destructed" << endl;
// Peasant::update output
cout <<  << ": Collected " <<  << endl;
cout <<  << ": Waiting " << endl;
cout <<  << ": Deposited " <<  << endl;
// Peasant::stop and move_to output
cout <<  << ": I'm stopping work" << endl;


// Peasant::describe output
cout << "Peasant ";
cout << "   Carrying " <<  << endl;
cout << "   Outbound to destination " <<  << endl;
cout << "   Inbound to source " <<  << endl;
cout << "   Collecting at source " <<  << endl;
cout << "   Depositing at destination " <<  << endl;

// strings used in Error objects thrown by Peasant::start_working
 + ": I can't move food to and from the same place!"

// Soldier output
cout << "Soldier " <<  << " constructed" << endl;
cout << "Soldier " <<  << " destructed" << endl;
// Soldier::start_attacking and take_hit output
cout <<  << ": I'm attacking!" << endl;
// Soldier::update output
cout <<  << ": Target is dead" << endl;
cout <<  << ": Target is now out of range" << endl;
cout <<  << ": Clang!" << endl;
cout <<  << ": I triumph!" << endl;
// Soldier::stop output
cout << << ": Don't bother me" << endl;
// Soldier::describe output
cout << "Soldier ";
cout << "   Attacking " <<  << endl;
cout << "   Not attacking" << endl;

// update output - arrangement for output may be different
"Clang!"

// Archer & Soldier (Warriors) output
// describe output
cout << "   Attacking dead target" << endl;
// update output
cout <<  << ": Target is dead" << endl;

// Archer output
// update output
"Twang!"
// take_hit output
cout <<  << ": I'm going to run away to " <<  << endl;
// describe output
cout << "Archer ";

// strings used in Error objects thrown by Soldier::start_attacking
 + ": I cannot attack myself!"
 + ": Target is out of range!"
 + ": Target is not alive!"

// View output
cout << "Display size: " <<  << ", scale: " <<  << ", origin: " <<  << endl;
// use for the list of object names that are outside the map:
cout << ", "; // output before all names except the first
cout << " outside the map" << endl;
// use for labels on y axis
cout << setw(4) << <y axis label value here> << " ";
cout << "     ";

// use for labels on x axis
cout << "  " << setw(4) << <x axis label value here>;

// strings used in Error objects thrown by View
"New map size is too big!"
"New map size is too small!"
"New map scale must be positive!"

// local view output
cout << "Local view for: " << << endl;

// health and amounts view output
"Amounts"
"Health"

cout << "Current " << << ":" << endl;
cout << "--------------" << endl;
cout <<  << ": " <<  << endl;

